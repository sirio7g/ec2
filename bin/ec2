#!/bin/bash
. $EC2_SCRIPT_HOME/conf/.ec2-default.props

# Init variables
infoOpt="N"
xOpt=""

# Extract options
while getopts "u:k:c:n:d:ixh" opt; do
  case $opt in
    u)
      userOpt=$OPTARG
      ;;
    k)
      keyOpt=$OPTARG
      ;;
    c)
      commandOpt=$OPTARG
      ;;
    i)
      infoOpt="Y"
      ;;
    x) 
      xOpt="-X"
      ;;
    n) 
      nameOpt=$OPTARG
      ;;
    d) 
      nameOpt=$OPTARG
      onlyPrint="1"
      ;;
    h)
      echo "Display and connect easely to your EC2 instance(s)"
      echo "Usage: $0 [-u user] [-x] [-c \"command\"] [eu|us|us-west-1|region]"
      echo "Arguments:"
      echo -e "\t-i display instances' details and exit"
      echo -e "\t-u user"
      echo -e "\t-k PEM file"
      echo -e "\t-x Export display"
      echo -e "\t-c \"command (sent by ssh)\""
      echo -e "\t-n \"name\""
      echo -e "\t-d \"name\""
      echo "All the arguments are optional, set the default properties in ~/.ec2-default.props"
      exit 1
      ;;
    \?)
      echo -e "\033[1;32mInvalid option: -$OPTARG\033[0m" >&2
      ;;
  esac
done
shift $(($OPTIND - 1))

# Set default variables
if [ "$1" = "" ]
then
  region=$DEFAULT_REGION
else
  region=$1
fi

if [ "$keyOpt" != "" ]
then
    key=$keyOpt
else
    key=$DEFAULT_PEM
fi

if [ "$1" = "eu" ]
then
  if [ "$keyOpt" != "" ]
  then
    key=$keyOpt
  else
    key=$DEFAULT_EU_PEM
  fi
  region=$DEFAULT_EU
elif [ "$1" = "us" ]
then
  if [ "$keyOpt" != "" ]
  then
    key=$keyOpt
  else
    key=$DEFAULT_US_PEM
  fi
  region=$DEFAULT_US
fi

if [ "$userOpt" != "" ]
then
  user=$userOpt
else
  user=$DEFAULT_USER
fi

if [ "$onlyPrint" = "" ]
  then
  # Print region info
  echo -e "\033[33mRegion: $region\033[0m"
fi

# Print info and quit
if [ "$infoOpt" = "Y" ]
then
  python $EC2_SCRIPT_HOME/bin/ec2-list -k $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY $region
  exit 1
fi

# Get hostname
hosts=`python $EC2_SCRIPT_HOME/bin/ec2-list -k $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY $region`
name="`echo "$hosts" | awk 'BEGIN { FS = "\t" } ; { print $1 }'`"
hostname="`echo "$hosts" | awk 'BEGIN { FS = "\t" } ; { print $2 }'`"

if [ "$nameOpt" != "" ]
then
	index=0

	OIFS="${IFS}"
	NIFS=$'\n'
	
	IFS="${NIFS}"

	for i in `echo "$name"`
	do
		IFS="${OIFS}"
		index=`expr $index + 1`
		if [ "$nameOpt" = "$i" ]
		then 
			export range="$index"	
		fi
		IFS="${NIFS}"
	done 
	IFS="${OIFS}"

	if [ "$range" = "" ]
	then
		echo -e "\033[31;2mHost $nameOpt not found\033[0m"
	fi

else

	index=0
	echo "$name" |while read i 
	do
		index=`expr $index + 1`
		address=`echo "$hostname" | head -$index | tail -1`
		echo -e "\033[33m$index. \033[32;1m$i\033[0m ($address)"
	done

	# Prompt for instance number(s)
	echo -n "Pick your option(s) (use space to specify more instances, i.e: 1 2 3 4): "
	read range
fi


for input in $range
do
  index=0
  for i in $hostname
  do
    index=`expr $index + 1`
    if [ "$index" = "$input" ]
    then
      selectedhost=`echo $i`
      selectedname=`echo "$name" | head -$index | tail -1`
    fi
  done


  if [ "$onlyPrint" = "" ]
  then
    # Run ssh
    echo -e "\033[32mConnecting to $selectedname \033[0m"
    echo -e "\033[33mssh -i $key $xOpt $user@$selectedhost\033[0m"
    ssh -o StrictHostKeyChecking=no -i $key $xOpt $user@$selectedhost $commandOpt
  else
    echo -n "$selectedhost"
  fi
done
